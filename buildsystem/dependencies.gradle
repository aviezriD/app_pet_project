rootProject.ext {
    //Libraries
    lifecycleVersion = "2.0.0"
    daggerVersion = '2.21'
    recyclerViewVersion = '1.0.0'
    rxJavaVersion = '2.2.6'
    rxAndroidVersion = '2.0.2'
    javaxAnnotationVersion = '1.0'
    javaxInjectVersion = '1'
    gsonVersion = '2.8.5'
    okHttpVersion = '2.5.0'
    androidAnnotationsVersion = '21.0.3'
    roomVersion = '2.1.0-alpha06'
    materialVersion = '1.0.0'
    constrainsLayoutVersion = '1.1.3'
    navigationVersion = '2.0.0'
    bindingKptVersion = '2.3.1'
    chartVersion = 'v3.1.0'
    interceptorVersion = '3.14.0'
    stetho = '1.5.1'
    retrofitVersion = '2.5.0'
    retrofitAdapterVersion = '1.0.0'
    cardview = "1.0.0"
    maps = "16.1.0"
    checkboxgroup = "1.0.1"

    //PlayServices
    servicesLocation = "16.0.0"

    //Testing
    robolectricVersion = '3.1.1'
    jUnitVersion = '4.12'
    assertJVersion = '1.7.1'
    mockitoVersion = '1.9.5'
    dexmakerVersion = '1.0'
    espressoVersion = '2.0'
    testingSupportLibVersion = '0.1'

    //Firebase
    firebaseCore = '16.0.7'
    firebaseDatabase = '16.0.6'
    firebaseMlVision = '19.0.2'
    rxFirebase = '1.5.6'
    // S3 Amazon
    s3Amazon = "2.6.+"

    //Development
    leakCanaryVersion = '1.3.1'
    //worker
    worker = '1.0.0'
    //Jackson
    jackson = "2.9.8"
    //DeviceNames
    DeviceNames = "1.1.8"
    coroutines = "1.2.1"

    presentation = [
            daggerCompiler     : "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger             : "com.google.dagger:dagger:${daggerVersion}",
            recyclerView       : "androidx.recyclerview:recyclerview:${recyclerViewVersion}",
            rxJava             : "io.reactivex.rxjava2:rxjava:${rxJavaVersion}",
            rxAndroid          : "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            javaxAnnotation    : "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            lifeCycle          : "androidx.lifecycle:lifecycle-extensions:${lifecycleVersion}",
            lifeCycleAnnotation: "androidx.lifecycle:lifecycle-compiler:${lifecycleVersion}",
            material           : "com.google.android.material:material:${materialVersion}",
            constrainsLayout   : "androidx.constraintlayout:constraintlayout:${constrainsLayoutVersion}",
            navigationFragment : "androidx.navigation:navigation-fragment:${navigationVersion}",
            navigationUi       : "androidx.navigation:navigation-ui:${navigationVersion}",
            bindingKpt         : "com.android.databinding:compiler:${bindingKptVersion}",
            chartAndroid       : "com.github.PhilJay:MPAndroidChart:${chartVersion}",
            cardview           : "androidx.cardview:cardview:${cardview}",
            maps               : "com.google.android.gms:play-services-maps:${maps}",
            checkboxgroup      : "com.xeoh.android:checkboxgroup:${checkboxgroup}"

    ]

    presentationTest = [
            mockito          : "org.mockito:mockito-core:${mockitoVersion}",
            dexmaker         : "com.google.dexmaker:dexmaker:${dexmakerVersion}",
            dexmakerMockito  : "com.google.dexmaker:dexmaker-mockito:${dexmakerVersion}",
            espresso         : "com.android.support.test.espresso:espresso-core:${espressoVersion}",
            testingSupportLib: "com.android.support.test:testing-support-lib:${testingSupportLibVersion}",
    ]

    domain = [
            javaxAnnotation: "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject    : "javax.inject:javax.inject:${javaxInjectVersion}",
            rxJava         : "io.reactivex.rxjava2:rxjava:${rxJavaVersion}",
            s3Amazon       : "com.amazonaws:aws-android-sdk-s3:${s3Amazon}",
            s3AmazonC      : "com.amazonaws:aws-android-sdk-cognito:${s3Amazon}",
            worker         : "android.arch.work:work-runtime:${worker}"
    ]



    data = [
            daggerCompiler    : "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger            : "com.google.dagger:dagger:${daggerVersion}",
            okHttp            : "com.squareup.okhttp:okhttp:${okHttpVersion}",
            gson              : "com.google.code.gson:gson:${gsonVersion}",
            rxJava            : "io.reactivex.rxjava2:rxjava:${rxJavaVersion}",
            rxAndroid         : "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            javaxAnnotation   : "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject       : "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${androidAnnotationsVersion}",
            room              : "androidx.room:room-runtime:${roomVersion}",
            roomRx            : "androidx.room:room-rxjava2:${roomVersion}",
            roomKpt           : "androidx.room:room-compiler:${roomVersion}",
            firebaseCore      : "com.google.firebase:firebase-core:${firebaseCore}",
            firebaseDatabase  : "com.google.firebase:firebase-database:${firebaseDatabase}",
            firebaseMlVision  : "com.google.firebase:firebase-ml-vision:${firebaseMlVision}",
            rxFirebase        : "com.github.FrangSierra:RxFirebase:${rxFirebase}",
            stetho            : "com.facebook.stetho:stetho:${stetho}",
            interceptor       : "com.squareup.okhttp3:logging-interceptor:${interceptorVersion}",
            retrofit          : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitRx        : "com.squareup.retrofit2:adapter-rxjava:${retrofitVersion}",
            retrofitGson      : "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            retrofitAdapter   : "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:${retrofitAdapterVersion}",
            serviceLocation   : "com.google.android.gms:play-services-location:${servicesLocation}",
            jacksonannotation : "com.fasterxml.jackson.core:jackson-annotations:${jackson}",
            jacksondatabind : "com.fasterxml.jackson.core:jackson-databind:${jackson}",
            jacksoncore : "com.fasterxml.jackson.core:jackson-core:${jackson}",
            DeviceNames : "com.jaredrummler:android-device-names:${DeviceNames}",
            coroutinesCore : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutines}",
            coroutinesKotlin : "org.jetbrains.kotlinx:kotlinx-coroutines-android:${coroutines}"


    ]

    dataTest = [
            junit      : "junit:junit:${jUnitVersion}",
            assertj    : "org.assertj:assertj-core:${assertJVersion}",
            mockito    : "org.mockito:mockito-core:${mockitoVersion}",
            robolectric: "org.robolectric:robolectric:${robolectricVersion}",
//            room       : "android.arch.persistence.room:testing:${roomVersion}",
            room       : "androidx.room:room-testing:${roomVersion}"
    ]

    development = [
            leakCanary: "com.squareup.leakcanary:leakcanary-android:${leakCanaryVersion}",
    ]
}
